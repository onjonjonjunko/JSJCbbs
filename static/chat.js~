$(document).ready(function() {
    if (!window.console) window.console = {};
    if (!window.console.log) window.console.log = function() {};

    messagekeyenroll();
    $(".message").select();
    updater.start();
});

function messagekeyenroll() {
    $(".messageform").off("submit");
    $(".messageform").on("submit", function() {
        newMessage($(this));
        return false;
    });
    $(".messageform").off("keypress");
    $(".messageform").on("keypress", function(e) {
        if (e.keyCode == 13) {
            newMessage($(this));
            return false;
        }
    });
};

function newMessage(form, threadid) {
    
    if ($('#image').get(0).files.length === 0) {
        console.log("No files selected.");
    } else {
        var file = document.getElementById('image').files[0];
        updater.socketfile.binaryType = 'arraybuffer';
        var reader = new FileReader();
        var rawData = new ArrayBuffer();
        reader.loadend = function() {
        }
        reader.onload = function(e) {
            rawData = e.target.result;
            updater.socketfile.send(rawData);
            console.log("the File has been transferred.")
        }
        reader.readAsArrayBuffer(file);
    }

    var message = form.formToDict();
    formid = form.attr("id");
    message["id"] = formid.replace("messageform", "");
    updater.socket.send(JSON.stringify(message));

    form.find("input[type=file]").val("");
    form.find("input[type=text]").val("").select();
    //formElement = document.getElementById(formid);
    //formElement.reset();
}

jQuery.fn.formToDict = function() {

    var fields = this.serializeArray();
    var json = {}
    for (var i = 0; i < fields.length; i++) {
        json[fields[i].name] = fields[i].value;
    }
    if (json.next) delete json.next;
    return json;
};

var updater = {
    socket: null,
    socketfile: null,
    socketnum: null,

    start: function() {
        var url = "ws://" + location.host + "/chatsocket";
        var urlfile = "ws://" + location.host + "/chatsocketfile";
        var urlnum = "ws://" + location.host + "/chatsocketnum";
        var urllove = "ws://" + location.host + "/chatsocketlove";
        var urlthread = "ws://" + location.host + "/chatsocketthread";
        updater.socket = new WebSocket(url);
        updater.socketfile = new WebSocket(urlfile);
        updater.socketnum = new WebSocket(urlnum);
        updater.socketlove = new WebSocket(urllove);
        updater.socketthread = new WebSocket(urlthread);

        updater.socket.onmessage = function(event) {
            updater.showMessage(JSON.parse(event.data));
        }
        updater.socketfile.onmessage = function(event) {
            updater.showImage(JSON.parse(event.data));
        }
        updater.socketnum.onmessage = function(event) {
            updater.showNum(JSON.parse(event.data));
        }
        updater.socketlove.onmessage = function(event) {
            updater.showLove(JSON.parse(event.data));
        }
        updater.socketthread.onmessage = function(event) {
            updater.showThread(JSON.parse(event.data));
        }
    },

    showMessage: function(message) {
        var existing = $("#m" + message.id);
        if (existing.length > 0) return;
        var node = $(message.html);
        node.hide().prependTo("#messagetable" + message.threadid).slideDown("slow");

        if (message.threadid != "0") {
           commentnum = $("#commentnum" + message.threadid); 
           commentnum.text(message.commentnum + "レス");
        }
    }, 
    showImage: function(message) {
        if ($('#image' + message.id)[0]) {
            var node = $(message.html);
            $('#image' + message.id).html(node);
        } else {
            var node = $(message.html);
            node.hide().prependTo("#imagelist").slideDown("slow");
            $("#newmessage").get(0).pause();
            $("#newmessage").get(0).currentTime = 0;
            $("#newmessage").get(0).play();
        }
    },
    showNum: function(message) {
        var node = $(message.html);
        $("#num").html(node);
    },
    showLove: function(message) {
        $("#" + message.id + "lovenum").text(message.lovenum );
    },
    showThread: function(message) {
        var node = $(message.html);
        node.hide();
        $("#imagethreadbox").html(node);
        node.slideDown("fast");
        messagekeyenroll();
    }
};

function loveClick(id){
    var message = {
        id: id
    }
    updater.socketlove.send(JSON.stringify(message));
}

function imageClick(id){
    loveClick(id)
    var message = {
        id: id
    };
    updater.socketthread.send(JSON.stringify(message));
}

function deleteClick(id) {
    var message = {
        id: id,
        delete: 1
    };
    updater.socket.send(JSON.stringify(message));
}

var comments = [
    ""
    
function autoComment() {
    
}
